geo $realip_remote_addr $mailhog_network_restrictions {
    default "Restricted Access";{{ '\n    ' }}
    {%- for interface in ansible_interfaces -%}
        {%- set interface = vars['ansible_%s' % interface] -%}
        {%- for ip in interface.ipv4 -%}
            {{ ip.address }}/32 off;{{ '\n    ' }}
        {%- endfor -%}
        {%- for ip in interface.ipv6 -%}
            {{ ip.address|regex_replace('%[a-z]+[\d]+$', '') }}/128 off;{{ '\n    ' }}
        {%- endfor -%}
    {%- endfor -%}
    {%- for subnet in privileged_subnets.values()|sum(start=[]) -%}
        {{ subnet }} off;{{ '\n' if loop.last else '\n    ' }}
    {%- endfor -%}
}

server {
    {% if dehydrated|cert_exists(mailhog.domain) %}
    listen 0.0.0.0:443 ssl http2;
    listen [::]:443 ssl http2;
    {% else %}
    listen 0.0.0.0:80;
    listen [::]:80;
    {% endif %}

    server_name {{ mailhog.domain }};

    {% if mailhog.basic_auth -%}
    auth_basic $mailhog_network_restrictions;
    auth_basic_user_file {{ nginx.prefix.config }}/mailhog.htpasswd;
    {% endif %}

    include {{ nginx.prefix.config }}/security_headers;

    location / {
        proxy_pass http://127.0.0.1:8025;
    }

    {% if dehydrated|cert_exists(mailhog.domain) -%}
    ############################################################################
    # HTTPS
    ############################################################################
    ssl_certificate {{ dehydrated|cert_fullchain(mailhog.domain) }};
    ssl_certificate_key {{ dehydrated|cert_privkey(mailhog.domain) }};
    ssl_trusted_certificate {{ dehydrated|cert_chain(mailhog.domain) }};
    include {{ nginx.prefix.config }}/https;
    {% endif %}
}
